<?xml version="1.0"?>

<launch>
    <!-- platform_config name (should be defined in the 'robile_description' ros package) -->
    <arg name="platform_config"/>
    <arg name="hub_wheel_controller_list"/>

    <!-- ROBOT SPAWN POSE -->
    <arg name="init_pos_x" default="0.0"/>
    <arg name="init_pos_y" default="0.0"/>
    <arg name="init_pos_z" default="0.0"/>
    <arg name="init_yaw" default="0.0"/>

    <!-- GAZEBO SETUP ARGUMENTS -->
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="paused" default="false"/>

    <!-- launch gazebo with world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- launch robot -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find robile_description)/gazebo/gazebo_robile.xacro' platform_config:=$(arg platform_config)" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen" args="-param robot_description
        -urdf
        -x $(arg init_pos_x)
        -y $(arg init_pos_y)
        -z $(arg init_pos_z)
        -Y $(arg init_yaw)
        -model robile">
    </node>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find robile_gazebo)/config/ros_controller/$(arg platform_config).yaml" command="load"/>

    <node name="robile_gazebo" pkg="robile_gazebo" type="robile_gazebo" />

    <!-- spawn controllers -->
    <node name="robile_ros_controller_spawner" pkg="controller_manager" type="spawner" output="screen" 
          args="joint_state_controller $(arg hub_wheel_controller_list)" />

</launch>
